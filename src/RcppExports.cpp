// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// findRepresent
NumericVector findRepresent(NumericMatrix mt, NumericVector geno);
RcppExport SEXP _binmapr_findRepresent(SEXP mtSEXP, SEXP genoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type mt(mtSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type geno(genoSEXP);
    rcpp_result_gen = Rcpp::wrap(findRepresent(mt, geno));
    return rcpp_result_gen;
END_RCPP
}
// findWindow
NumericMatrix findWindow(NumericVector pos, int windowLen);
RcppExport SEXP _binmapr_findWindow(SEXP posSEXP, SEXP windowLenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type pos(posSEXP);
    Rcpp::traits::input_parameter< int >::type windowLen(windowLenSEXP);
    rcpp_result_gen = Rcpp::wrap(findWindow(pos, windowLen));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_binmapr_findRepresent", (DL_FUNC) &_binmapr_findRepresent, 2},
    {"_binmapr_findWindow", (DL_FUNC) &_binmapr_findWindow, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_binmapr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
